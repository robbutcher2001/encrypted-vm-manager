AWSTemplateFormatVersion: '2010-09-09'
Description: VM Manager Stack
Parameters:
  VpcId:
    Type: String
  TemporaryUserPassword:
    Type: String
Resources:
  # S3 Bucket
  OutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'output-bucket-${AWS::Region}-${AWS::AccountId}'
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  # VM -> S3 access
  VmManagerS3AccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: VmManagerS3AccessRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Policies:
      - PolicyName: VmManagerWriteS3Policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:PutEncryptionConfiguration
            - s3:PutObject
            - s3:GetObjectAcl
            - s3:GetObject
            - s3:PutAccelerateConfiguration
            - s3:PutAnalyticsConfiguration
            - s3:PutLifecycleConfiguration
            - s3:PutMetricsConfiguration
            - s3:PutReplicationConfiguration
            - s3:ListBucket
            - s3:GetBucketLocation
            - s3:PutInventoryConfiguration
            Resource:
            - arn:aws:s3:::*/*
            - !GetAtt OutputBucket.Arn
          - Effect: Allow
            Action:
            - s3:ListAllMyBuckets
            Resource: '*'
  VmManagerS3AccessInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: VmManagerS3AccessInstanceProfile
      Roles:
        - !Ref VmManagerS3AccessRole
  # User -> VM access
  VmManagerRdpSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: VmRdp
      GroupDescription: 'Security Group to restrict VM access to RDP only'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3389
        ToPort: 3389
        CidrIp: 0.0.0.0/0
  # User -> Console access
  VmManagerGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: VmManagerGroup
      Policies:
      - PolicyName: VmManagerWriteIamPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - iam:ChangePassword
            Resource: '*'
          - Effect: Allow
            Action:
            - iam:PassRole
            Resource:
            - !GetAtt VmManagerS3AccessRole.Arn
      - PolicyName: VmManagerEc2Policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:GetPasswordData
            - ec2:DescribeInstances
            - ec2:TerminateInstances
            - ec2:CreateKeyPair
            - ec2:CreateTags
            - ec2:RunInstances
            Resource: '*'
      - PolicyName: VmManagerReadS3Policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObjectAcl
            - s3:GetObject
            - s3:ListBucket
            - s3:GetBucketLocation
            Resource:
            - arn:aws:s3:::*/*
            - !GetAtt OutputBucket.Arn
          - Effect: Allow
            Action:
            - s3:ListAllMyBuckets
            Resource: '*'
  # Users - note, also change the Policy Resource reference when creating a new user
  User1:
    Type: AWS::IAM::User
    Properties:
      UserName: rob
      LoginProfile:
        Password: !Ref TemporaryUserPassword
        PasswordResetRequired: true
      Groups:
        - !Ref VmManagerGroup
      Policies:
      - PolicyName: VmManagerAccessKeyIamPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - iam:DeleteAccessKey
            - iam:GetAccessKeyLastUsed
            - iam:CreateAccessKey
            - iam:ListAccessKeys
            Resource:
              Fn::Join: [ '', [ 'arn:aws:iam::', !Ref 'AWS::AccountId', ':user/', 'rob' ] ]
          - Effect: Allow
            Action:
            - iam:ListUsers
            Resource: '*'
